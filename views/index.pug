- var firstItem = function(obj) {
-   if(!obj || Object.keys(obj).length === 0) return {};
-   return obj[Object.keys(obj)[0]];
- }

- var niceEnum = function(e) {
-   return e[0] + '[\n  ' + e.map(function(x,i) {
-     if(i>0) {
-       return i > 1 ? '\n  ' + x : x;
-      }
-    }).filter(function(x) {
-      return !!x;
-    }) + '\n]';
- }

- var objectIsArray = function(obj) {
-   return Array.isArray(obj) || 1 + Object.keys(obj).reduce(function(x,y) {
-     return parseInt(x) + parseInt(y);
-   }) === Object.keys(obj).length;
- }

doctype html
html
  meta(charset="utf-8")
  meta(name="viewport", content="width=device-width, initial-scale=1, user-scalable=no")

  head
    title= title
    link(rel="stylesheet", href="//fonts.googleapis.com/css?family=Raleway:400,300,600")
    link(rel="stylesheet", href="/docs/css/normalize.css")
    link(rel="stylesheet", href="/docs/css/skeleton.css")

  body(data-language="curl", onload="location.href=(function(){ return '#' + location.href.split('#')[1]; }())")
    div(class="container")
      nav(class="fix-left")
        each resource, resourceName in routes
          h5= resourceName
          ul
            each route in resource
              - var routeId = route.title.toLowerCase().replace(/\'/, '').split(' ').join('-')   
              li: a(class="sidebar-nav-i2em", href="#" + routeId)= route.title
      div(class="row")
        div(class="ten columns offset-by-two column")
          - var headers = ['JSON Payloads', 'Request Parameters', 'Query Parameters', 'JSON Payload']
          each resource, resourceName in routes
            each route in resource
              - var payloadTypes = [route.requestVariants, route.requestParameters, route.queryParameters, route.requestBody]
              - var routeId = route.title.toLowerCase().split(' ').join('-')
              div(id="" + routeId, class="row")
                div(class="six columns")
                  h2= route.title
                  p= route.description
                  each r in payloadTypes
                    if r
                      - header = headers[payloadTypes.indexOf(r)]
                      if objectIsArray(r)
                        - route.requestVariants = r
                      else
                        - route.requestVariants = [r]
                      include ./modules/requestVariant.pug
                div(class="six columns")
                  - var fullPath = 'https://<' + appLocals.title + '>' + route.path
                  pre: code curl
                    if route.verb !== 'GET'
                      |  -X
                      = route.verb

                    |  https://
                    = '<' + appLocals.title + '>'
                    = route.path

                    if route.headers
                      each header in route.headers
                        |  \
                        = '' + '\n'
                        | -H "
                        = Object.keys(header)[0] + ': '
                        = header[Object.keys(header)[0]]

                    if route.exampleRequest
                      |  \
                      = '' + '\n'
                      | -H "Content-Type: application/json" \
                      = '' + '\n'
                      | -d@- &lt;&lt;EOF
                      ='' + '\n'
                      =JSON.stringify(route.exampleRequest, null, '  ') + '\n'
                      | EOF
              hr

