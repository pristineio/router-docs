- var getTypeString = function(type) {
-  if(typeof type === 'string') {
-    return type;
-  }
-  if(Array.isArray(type)) {
-    if(type[0] === '<Enum>') {
-      return niceEnum(type);
-    } else {
-      return '[' + type + ']';
-    }
-  }
-  return false;
-}

div(style="margin-top: 1rem")
  h5= header
  each variant, i in route.requestVariants
    if Object.keys(route.requestVariants).length > 1
      h5= 'Variant ' + (parseInt(i)+1)
    table(class="u-full-width")
      thead
        tr
          th Name
          th Type
          th Required
          th Description
      tbody
        each type, property in variant
          tr
            td= property
            td(style="white-space: pre")
              if firstItem(type).$parentSchemaId
                a(href="" + firstItem(type).$parentSchemaRef)= '<' + firstItem(type).$parentSchemaId + '>'
              else
                - var typeString = getTypeString(type.type)
                if !typeString
                  - var parentSchemaId = firstItem(type.type).$parentSchemaId
                  if parentSchemaId
                    a(href="" + type.$ref)= '<' + parentSchemaId + '>'
                else
                  = typeString
              td(style="text-align: center")
                if type.$required
                  span &#10003;
            td
              if type.description
                = type.description
          //- if firstItem(type).$parentSchemaId
          //-   h5 Subproperties
          //-   table
          //-     thead
          //-       tr
          //-         th Name
          //-         th Type
          //-         th Description
          //-     tbody
          //-       each subType, subProperty in type
          //-         tr
          //-           td= subProperty
          //-           td
          //-             if typeof subType.type === 'string'
          //-               = subType.type
          //-             else if Array.isArray(subType.type)
          //-               if subType.type[0] == '<Enum>'
          //-                 = niceEnum(subType.type)
          //-               else
          //-                 = subType.type
          //-             else
          //-               - var parentSchemaId = firstItem(subType.type).$parentSchemaId
          //-               a(href="" + subType.$ref)= '<' + parentSchemaId + '>'
          //-             if subType.$required
          //-               span &nbsp;REQUIRED
          //-           td
          //-             if subType.description
          //-               = subType.description
